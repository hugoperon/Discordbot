name: Deploy Discord Bot

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: discord
    timeout-minutes: 360

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Restaurer la base de données précédente
    - name: Restore database
      id: cache-db
      uses: actions/cache/restore@v3
      with:
        path: voice_stats.db
        key: database-${{ github.run_id }}
        restore-keys: |
          database-

    - name: Run bot
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      run: |
        python bot.py
      # Même si le bot est arrêté/annulé, continue aux étapes suivantes
      continue-on-error: true

    # Sauvegarder la base de données dans tous les cas
    - name: Save database
      if: always()  # Exécute cette étape même si les précédentes échouent
      uses: actions/cache/save@v3
      with:
        path: voice_stats.db
        key: database-${{ github.run_id }}