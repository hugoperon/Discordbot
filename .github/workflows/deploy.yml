name: Deploy Discord Bot

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: discord
    timeout-minutes: 360

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Restaurer la base de données précédente si elle existe
    - name: Restore database
      uses: actions/cache@v2
      with:
        path: voice_stats.db
        key: ${{ runner.os }}-db-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-db-

    - name: Run bot
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      run: |
        python bot.py

    # Sauvegarder la base de données pour la prochaine exécution
    - name: Save database
      uses: actions/cache@v2
      if: always()
      with:
        path: voice_stats.db
        key: ${{ runner.os }}-db-${{ github.sha }}